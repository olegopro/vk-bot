{
    "openapi": "3.0.0",
    "info": {
        "title": "VK Bot API",
        "description": "API для управления VK ботом",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/accounts/all-accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Получить все аккаунты ВКонтакте",
                "description": "Возвращает список всех добавленных аккаунтов ВКонтакте с их основной информацией",
                "operationId": "9e25fb3fe679b8fc20eede1939b3ec7a",
                "responses": {
                    "200": {
                        "description": "Успешное получение списка аккаунтов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountListResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/add": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Добавить аккаунт ВКонтакте",
                "description": "Устанавливает и сохраняет данные аккаунта ВКонтакте по токену доступа",
                "operationId": "ea80e9e0d91235badfeb4a8d7283d6b4",
                "requestBody": {
                    "description": "Данные для добавления аккаунта",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "access_token": {
                                        "description": "Токен доступа к API ВКонтакте",
                                        "type": "string",
                                        "example": "vk1.a.abc123def456..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Данные аккаунта успешно установлены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Статус успешности запроса",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AccountModel"
                                        },
                                        "message": {
                                            "description": "Сообщение о результате операции",
                                            "type": "string",
                                            "example": "Аккаунт успешно добавлен"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/delete-account/{id}": {
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Удалить аккаунт ВКонтакте",
                "description": "Удаляет аккаунт ВКонтакте из системы по его идентификатору",
                "operationId": "31a2a453d0a5148bec71817551db5d5c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор аккаунта для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123456789
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Аккаунт успешно удален",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Статус успешности запроса",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Сообщение о результате операции",
                                            "type": "string",
                                            "example": "Аккаунт успешно удален"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cyclic-tasks": {
            "get": {
                "tags": [
                    "Cyclic Tasks"
                ],
                "summary": "Получить список циклических задач",
                "description": "Возвращает пагинированный список всех циклических задач",
                "operationId": "c06eede861078a1bb770724ae72d5f55",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы для пагинации",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Количество задач на странице",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список циклических задач успешно получен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "account_id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "total_task_count": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "remaining_tasks_count": {
                                                        "type": "integer",
                                                        "example": 75
                                                    },
                                                    "tasks_per_hour": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "pause",
                                                            "done"
                                                        ],
                                                        "example": "active"
                                                    },
                                                    "selected_times": {
                                                        "type": "object",
                                                        "example": "{\"monday\": [true, false, true]}"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 30
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Список циклических задач получен"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при получении списка задач"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cyclic-tasks/{taskId}": {
            "delete": {
                "tags": [
                    "Cyclic Tasks"
                ],
                "summary": "Удалить циклическую задачу",
                "description": "Удаляет циклическую задачу по её ID",
                "operationId": "861099c71765014a186fb390d9e778f2",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID циклической задачи для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Циклическая задача успешно удалена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Циклическая задача удалена"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Циклическая задача не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Циклическая задача не найдена"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при удалении задачи"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Cyclic Tasks"
                ],
                "summary": "Редактировать циклическую задачу",
                "description": "Обновляет данные существующей циклической задачи",
                "operationId": "222c1047b67979ef4328e1f93857e912",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID циклической задачи для редактирования",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Данные для обновления циклической задачи",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "account_id": {
                                        "description": "ID аккаунта",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "total_task_count": {
                                        "description": "Общее количество задач",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "tasks_per_hour": {
                                        "description": "Количество задач в час",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "status": {
                                        "description": "Статус задачи",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "pause",
                                            "done"
                                        ],
                                        "example": "active"
                                    },
                                    "selected_times": {
                                        "description": "Выбранные времена выполнения",
                                        "type": "object",
                                        "example": "{\"monday\": [true, false, true]}"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Циклическая задача успешно обновлена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "account_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "total_task_count": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "remaining_tasks_count": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "tasks_per_hour": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "selected_times": {
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Циклическая задача обновлена"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Циклическая задача не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Циклическая задача не найдена"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при обновлении задачи"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cyclic-tasks/delete-all-cyclic-tasks": {
            "delete": {
                "tags": [
                    "Cyclic Tasks"
                ],
                "summary": "Удалить все циклические задачи",
                "description": "Удаляет все циклические задачи из системы",
                "operationId": "9403fb740f41ab692c56e70d235d0b91",
                "responses": {
                    "200": {
                        "description": "Все циклические задачи успешно удалены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Все циклические задачи удалены"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при удалении всех задач"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cyclic-tasks/pause-cyclic-task/{taskId}": {
            "patch": {
                "tags": [
                    "Cyclic Tasks"
                ],
                "summary": "Приостановить/возобновить циклическую задачу",
                "description": "Переключает статус циклической задачи между активным и приостановленным",
                "operationId": "2993d016e72d4ee4dd758229514c4742",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID циклической задачи для изменения статуса",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Статус циклической задачи успешно изменен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Циклическая задача поставлена на паузу"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Циклическая задача не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Циклическая задача не найдена"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при изменении статуса задачи"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/filters/search": {
            "post": {
                "tags": [
                    "Filters"
                ],
                "summary": "Поиск пользователей ВКонтакте",
                "description": "Выполняет поиск пользователей ВКонтакте с применением различных фильтров",
                "operationId": "ae1ee18ed856185a2e55120e55dc4227",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_id"
                                ],
                                "properties": {
                                    "q": {
                                        "description": "Поисковый запрос",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Иван Петров"
                                    },
                                    "account_id": {
                                        "description": "ID аккаунта",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "city_id": {
                                        "description": "ID города для фильтрации",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "count": {
                                        "description": "Количество результатов",
                                        "type": "integer",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "example": 20
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Поиск пользователей выполнен успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "count": {
                                                    "description": "Количество найденных пользователей",
                                                    "type": "integer"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "ID пользователя",
                                                                "type": "integer",
                                                                "example": 123456
                                                            },
                                                            "first_name": {
                                                                "description": "Имя",
                                                                "type": "string",
                                                                "example": "Иван"
                                                            },
                                                            "last_name": {
                                                                "description": "Фамилия",
                                                                "type": "string",
                                                                "example": "Петров"
                                                            },
                                                            "screen_name": {
                                                                "description": "Короткое имя (домен)",
                                                                "type": "string",
                                                                "example": "ivan_petrov"
                                                            },
                                                            "photo_200": {
                                                                "description": "URL фотографии 200px",
                                                                "type": "string",
                                                                "example": "https://sun9-74.userapi.com/photo.jpg"
                                                            },
                                                            "city": {
                                                                "properties": {
                                                                    "id": {
                                                                        "description": "ID города",
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "title": {
                                                                        "description": "Название города",
                                                                        "type": "string",
                                                                        "example": "Москва"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "online": {
                                                                "description": "Статус онлайн (0 - оффлайн, 1 - онлайн)",
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Поиск пользователей выполнен успешно"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "description": "Ошибки валидации",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "description": "Сообщение об ошибке",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/filters/users-by-city": {
            "post": {
                "tags": [
                    "Filters"
                ],
                "summary": "Получение пользователей по городу",
                "description": "Получает список пользователей ВКонтакте по ID города",
                "operationId": "a7dc736a60cac5b8cd430dd8c1556d37",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "city_id",
                                    "account_id"
                                ],
                                "properties": {
                                    "city_id": {
                                        "description": "ID города",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "account_id": {
                                        "description": "ID аккаунта",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "count": {
                                        "description": "Количество пользователей (по умолчанию 10)",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список пользователей получен успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "domains": {
                                                    "type": "array",
                                                    "items": {
                                                        "description": "Домен пользователя (screen_name)",
                                                        "type": "string",
                                                        "example": "user123"
                                                    }
                                                },
                                                "count": {
                                                    "description": "Количество найденных пользователей",
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Найдено пользователей: 5"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "description": "Ошибки валидации",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "description": "Сообщение об ошибке",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/filters/cities": {
            "post": {
                "tags": [
                    "Filters"
                ],
                "summary": "Поиск городов",
                "description": "Получает список городов по поисковому запросу через API ВКонтакте",
                "operationId": "061c0055acb05941be05d1a9586a7cdc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "q"
                                ],
                                "properties": {
                                    "q": {
                                        "description": "Поисковый запрос (минимум 2 символа)",
                                        "type": "string",
                                        "minLength": 2,
                                        "example": "Москва"
                                    },
                                    "country_id": {
                                        "description": "ID страны (по умолчанию 1 - Россия)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "count": {
                                        "description": "Количество результатов (максимум 1000)",
                                        "type": "integer",
                                        "maximum": 1000,
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Список городов получен успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "count": {
                                                    "description": "Количество найденных городов",
                                                    "type": "integer"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "ID города",
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "description": "Название города",
                                                                "type": "string",
                                                                "example": "Москва"
                                                            },
                                                            "area": {
                                                                "description": "Область",
                                                                "type": "string",
                                                                "example": "Московская область"
                                                            },
                                                            "region": {
                                                                "description": "Регион",
                                                                "type": "string",
                                                                "example": "Центральный федеральный округ"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Список городов получен"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "description": "Ошибки валидации",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "description": "Сообщение об ошибке",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Получить настройки приложения",
                "description": "Возвращает все настройки приложения",
                "operationId": "900c71fe472e27433e8ad8805f7a5157",
                "responses": {
                    "200": {
                        "description": "Успешное получение настроек",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "show_followers": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "show_friends": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "task_timeout": {
                                                "type": "integer",
                                                "example": 30
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/settings/save": {
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Сохранить настройки приложения",
                "description": "Обновляет настройки приложения",
                "operationId": "397dbab512c95e01ed1ec22a57fe07ae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "show_followers",
                                    "show_friends",
                                    "task_timeout"
                                ],
                                "properties": {
                                    "show_followers": {
                                        "description": "Отображение подписчиков",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "show_friends": {
                                        "description": "Отображение друзей",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "task_timeout": {
                                        "description": "Таймаут задач в секундах",
                                        "type": "integer",
                                        "example": 30
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Настройки успешно сохранены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Настройки сохранены"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка валидации"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/statistics": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Получить статистику задач по дням недели за последние 7 дней",
                "description": "Возвращает количество выполненных задач, сгруппированных по дням недели за последние 7 дней",
                "operationId": "afd7d4b0385f96f0fdd73b45f0a9aef1",
                "responses": {
                    "200": {
                        "description": "Успешное получение недельной статистики",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "Понедельник": 5,
                                                "Вторник": 3,
                                                "Среда": 7,
                                                "Четверг": 2,
                                                "Пятница": 8,
                                                "Суббота": 1,
                                                "Воскресенье": 4
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Статистика за последние 7 дней получена"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{status?}/{accountId?}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Получить список задач",
                "description": "Получает список задач с возможностью фильтрации по статусу и ID аккаунта. Поддерживает пагинацию и возвращает статистику по статусам задач.",
                "operationId": "a138c77953221a911eddc63ebc0175a8",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Статус задачи для фильтрации (queued, done, failed)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "queued",
                                "done",
                                "failed"
                            ],
                            "example": "queued"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "ID аккаунта для фильтрации задач",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 9121607
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы для пагинации",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Количество элементов на странице",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "maximum": 100,
                            "minimum": 1,
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное получение списка задач",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TasksListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task-info/{taskId}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Получить информацию о задаче",
                "description": "Получает подробную информацию о задаче по её идентификатору, включая данные поста, лайки и пользователей",
                "operationId": "798baf382d84a8a5f91b1c949428f058",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Идентификатор задачи",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное получение информации о задаче",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskInfoResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/get-posts-for-like": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Создать задачи на лайки из новостной ленты",
                "description": "Создает и добавляет в очередь задачи на лайки из новостной ленты указанного аккаунта",
                "operationId": "9fdb95ea93177cb8541e529f6ba5cb0c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_id",
                                    "task_count"
                                ],
                                "properties": {
                                    "account_id": {
                                        "description": "ID аккаунта для создания задач",
                                        "type": "integer",
                                        "example": 9121607
                                    },
                                    "task_count": {
                                        "description": "Количество задач для создания",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Задачи успешно созданы",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TasksListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/create-like-tasks-for-user-wall-posts": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Создать задачи на лайки для постов пользователей",
                "description": "Создает задачи на лайки для постов со стен указанных пользователей",
                "operationId": "04344204a4f32ec4d53d1428ed4068a9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_id",
                                    "domains"
                                ],
                                "properties": {
                                    "account_id": {
                                        "description": "ID аккаунта для создания задач",
                                        "type": "integer",
                                        "example": 9121607
                                    },
                                    "domains": {
                                        "description": "Массив доменов пользователей",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "user1",
                                            "user2",
                                            "user3"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Задачи успешно созданы",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TasksListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/add-task-likes": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Добавить задачи в очередь на выполнение",
                "description": "Обрабатывает задачи на лайки в статусе pending и добавляет их в очередь на выполнение",
                "operationId": "32ad09bd6a88356e131abe3f7c77d4ae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Токен доступа для API ВКонтакте",
                                        "type": "string",
                                        "example": "vk1.a.abc123def456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Задачи успешно добавлены в очередь",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "account_id": {
                                                        "type": "integer",
                                                        "example": 9121607
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Задачи успешно созданы и запланированы"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/create-cyclic-task": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Создать циклическую задачу на лайки",
                "description": "Создает циклическую задачу на лайки с автоматическим распределением времени выполнения",
                "operationId": "877cf1cfc7cf371ffadf735f05f74945",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_id",
                                    "tasks_per_hour",
                                    "total_task_count",
                                    "status"
                                ],
                                "properties": {
                                    "account_id": {
                                        "description": "ID аккаунта для создания задач",
                                        "type": "integer",
                                        "example": 9121607
                                    },
                                    "tasks_per_hour": {
                                        "description": "Количество задач в час",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "total_task_count": {
                                        "description": "Общее количество задач",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "status": {
                                        "description": "Статус циклической задачи",
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "selected_times": {
                                        "description": "Выбранные временные интервалы",
                                        "type": "string",
                                        "example": "9-18"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Циклическая задача успешно создана",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "account_id": {
                                                    "type": "integer",
                                                    "example": 9121607
                                                },
                                                "tasks_per_hour": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_task_count": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "remaining_tasks_count": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "likes_distribution": {
                                                    "type": "string",
                                                    "example": "[5,15,25,35,45,55]"
                                                },
                                                "selected_times": {
                                                    "type": "string",
                                                    "example": "9-18"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Задача на постановку лайков запланирована."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/count/{status?}/{accountId?}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Подсчитать количество задач",
                "description": "Подсчитывает количество задач по указанному статусу и/или ID аккаунта",
                "operationId": "242f0b73a6c5905e97dc177994276cb7",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Статус задачи для фильтрации (queued, done, failed)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "queued",
                                "done",
                                "failed"
                            ],
                            "example": "queued"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "ID аккаунта для фильтрации задач",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 9121607
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Количество задач успешно получено",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "integer",
                                            "example": 42
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Количество задач получено"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/delete-all-tasks/{status?}/{accountId?}": {
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Удалить все задачи",
                "description": "Удаляет все задачи на основе указанного статуса и/или ID аккаунта. Если параметры не указаны, удаляются все задачи.",
                "operationId": "3e6f31ee7f90615a34c69cb14876ab5b",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Статус задач для удаления (queued, done, failed). Если не указан, удаляются задачи всех статусов",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "queued",
                                "done",
                                "failed"
                            ],
                            "example": "queued"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "ID аккаунта для удаления задач. Если не указан, удаляются задачи всех аккаунтов",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 9121607
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задачи успешно удалены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/delete-task-by-id/{id}": {
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Удалить задачу по ID",
                "description": "Удаляет задачу по её идентификатору. Автоматически определяет статус задачи и выполняет соответствующее удаление.",
                "operationId": "dd6531a4ffaab5b32f2cd457f7aef15a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Идентификатор задачи для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 12345
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задача успешно удалена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/delete-like/{taskId}": {
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Удалить лайк по ID задачи",
                "description": "Удаляет лайк с поста, связанного с указанной задачей",
                "operationId": "457897257356edd26e3aaca82fec3604",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID задачи, для которой нужно удалить лайк",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Лайк успешно удален",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Лайк успешно удален"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountModel": {
                "description": "Модель аккаунта ВКонтакте",
                "properties": {
                    "account_id": {
                        "description": "Уникальный идентификатор аккаунта ВК",
                        "type": "integer",
                        "example": 123456789
                    },
                    "access_token": {
                        "description": "Токен доступа к API ВКонтакте",
                        "type": "string",
                        "example": "vk1.a.abc123def456..."
                    },
                    "screen_name": {
                        "description": "Короткое имя пользователя",
                        "type": "string",
                        "example": "john_doe",
                        "nullable": true
                    },
                    "first_name": {
                        "description": "Имя пользователя",
                        "type": "string",
                        "example": "Иван",
                        "nullable": true
                    },
                    "last_name": {
                        "description": "Фамилия пользователя",
                        "type": "string",
                        "example": "Иванов",
                        "nullable": true
                    },
                    "bdate": {
                        "description": "Дата рождения",
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AccountListResponse": {
                "description": "Ответ со списком аккаунтов ВКонтакте",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseSuccessResponse"
                    },
                    {
                        "properties": {
                            "message": {
                                "description": "Сообщение о результате операции",
                                "type": "string",
                                "example": "Список аккаунтов получен"
                            },
                            "data": {
                                "description": "Массив аккаунтов ВКонтакте",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AccountModel"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "BaseSuccessResponse": {
                "description": "Базовая схема успешного ответа",
                "properties": {
                    "success": {
                        "description": "Статус успешности запроса",
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "description": "Сообщение о результате операции",
                        "type": "string",
                        "example": "Операция выполнена успешно"
                    }
                },
                "type": "object"
            },
            "BaseErrorResponse": {
                "description": "Базовая схема ответа с ошибкой",
                "properties": {
                    "success": {
                        "description": "Статус успешности запроса",
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "Сообщение об ошибке",
                        "type": "string",
                        "example": "Произошла ошибка при выполнении операции"
                    }
                },
                "type": "object"
            },
            "TaskInfoResponse": {
                "description": "Ответ с информацией о задаче",
                "properties": {
                    "success": {
                        "description": "Статус успешности запроса",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "description": "Данные о задаче",
                        "properties": {
                            "attachments": {
                                "description": "Вложения поста",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "type": {
                                            "description": "Тип вложения",
                                            "type": "string",
                                            "example": "photo"
                                        },
                                        "photo": {
                                            "description": "Данные фотографии",
                                            "properties": {
                                                "id": {
                                                    "description": "ID фотографии",
                                                    "type": "integer",
                                                    "example": 457277432
                                                },
                                                "owner_id": {
                                                    "description": "ID владельца фотографии",
                                                    "type": "integer",
                                                    "example": 357817305
                                                },
                                                "sizes": {
                                                    "description": "Размеры фотографии",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "type": {
                                                                "description": "Тип размера",
                                                                "type": "string",
                                                                "example": "x"
                                                            },
                                                            "width": {
                                                                "description": "Ширина",
                                                                "type": "integer",
                                                                "example": 640
                                                            },
                                                            "height": {
                                                                "description": "Высота",
                                                                "type": "integer",
                                                                "example": 395
                                                            },
                                                            "url": {
                                                                "description": "URL изображения",
                                                                "type": "string",
                                                                "example": "https://sun9-41.userapi.com/s/v1/if2/..."
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "likes": {
                                "description": "Информация о лайках",
                                "properties": {
                                    "count": {
                                        "description": "Количество лайков",
                                        "type": "integer",
                                        "example": 9
                                    },
                                    "user_likes": {
                                        "description": "Поставил ли текущий пользователь лайк",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "can_like": {
                                        "description": "Может ли пользователь поставить лайк",
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            },
                            "liked_users": {
                                "description": "Пользователи, поставившие лайки",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "description": "ID пользователя",
                                            "type": "integer",
                                            "example": 713861431
                                        },
                                        "first_name": {
                                            "description": "Имя пользователя",
                                            "type": "string",
                                            "example": "Андрей"
                                        },
                                        "last_name": {
                                            "description": "Фамилия пользователя",
                                            "type": "string",
                                            "example": "Терещенко"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "account_id": {
                                "description": "ID аккаунта из модели Task",
                                "type": "integer",
                                "example": 9121607
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "Сообщение о результате операции",
                        "type": "string",
                        "example": "Данные о задаче получены"
                    }
                },
                "type": "object"
            },
            "TaskErrorResponse": {
                "description": "Ответ с ошибкой",
                "properties": {
                    "success": {
                        "description": "Статус успешности запроса",
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "Сообщение об ошибке",
                        "type": "string",
                        "example": "Произошла ошибка при получении данных о задаче"
                    }
                },
                "type": "object"
            },
            "Task": {
                "description": "Модель задачи",
                "properties": {
                    "id": {
                        "description": "ID задачи",
                        "type": "integer",
                        "example": 123
                    },
                    "job_id": {
                        "description": "ID задания в очереди",
                        "type": "integer",
                        "example": 1
                    },
                    "account_id": {
                        "description": "ID аккаунта",
                        "type": "integer",
                        "example": 9121607
                    },
                    "first_name": {
                        "description": "Имя пользователя",
                        "type": "string",
                        "example": "Андрей"
                    },
                    "last_name": {
                        "description": "Фамилия пользователя",
                        "type": "string",
                        "example": "Терещенко"
                    },
                    "owner_id": {
                        "description": "ID владельца поста",
                        "type": "integer",
                        "example": 357817305
                    },
                    "item_id": {
                        "description": "ID поста",
                        "type": "integer",
                        "example": 457277432
                    },
                    "status": {
                        "description": "Статус задачи",
                        "type": "string",
                        "enum": [
                            "queued",
                            "done",
                            "failed"
                        ],
                        "example": "queued"
                    },
                    "is_cyclic": {
                        "description": "Является ли задача циклической",
                        "type": "integer",
                        "example": 0
                    },
                    "error_message": {
                        "description": "Сообщение об ошибке (если есть)",
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "run_at": {
                        "description": "Время запуска задачи",
                        "type": "string",
                        "example": "2025-07-19 18:31:08"
                    },
                    "created_at": {
                        "description": "Время создания задачи",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Время последнего обновления задачи",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "description": "Модель пагинации",
                "properties": {
                    "current_page": {
                        "description": "Текущая страница",
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "description": "Данные на текущей странице",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    },
                    "first_page_url": {
                        "description": "URL первой страницы",
                        "type": "string",
                        "example": "http://localhost/api/tasks?page=1"
                    },
                    "from": {
                        "description": "Номер первого элемента на странице",
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "description": "Номер последней страницы",
                        "type": "integer",
                        "example": 5
                    },
                    "last_page_url": {
                        "description": "URL последней страницы",
                        "type": "string",
                        "example": "http://localhost/api/tasks?page=5"
                    },
                    "next_page_url": {
                        "description": "URL следующей страницы",
                        "type": "string",
                        "example": "http://localhost/api/tasks?page=2",
                        "nullable": true
                    },
                    "path": {
                        "description": "Базовый путь",
                        "type": "string",
                        "example": "http://localhost/api/tasks"
                    },
                    "per_page": {
                        "description": "Количество элементов на странице",
                        "type": "integer",
                        "example": 30
                    },
                    "prev_page_url": {
                        "description": "URL предыдущей страницы",
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "to": {
                        "description": "Номер последнего элемента на странице",
                        "type": "integer",
                        "example": 30
                    },
                    "total": {
                        "description": "Общее количество элементов",
                        "type": "integer",
                        "example": 150
                    },
                    "links": {
                        "description": "Ссылки для навигации по страницам",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "description": "URL ссылки",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/tasks?page=1",
                                    "nullable": true
                                },
                                "label": {
                                    "description": "Текст ссылки",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "description": "Активна ли ссылка",
                                    "type": "boolean",
                                    "example": true
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "TasksListResponse": {
                "description": "Ответ со списком задач",
                "properties": {
                    "success": {
                        "description": "Статус успешности запроса",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "description": "Данные ответа",
                        "properties": {
                            "total": {
                                "description": "Общее количество задач",
                                "type": "integer",
                                "example": 150
                            },
                            "statuses": {
                                "description": "Количество задач по статусам",
                                "properties": {
                                    "failed": {
                                        "description": "Количество неудачных задач",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "queued": {
                                        "description": "Количество задач в очереди",
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "done": {
                                        "description": "Количество выполненных задач",
                                        "type": "integer",
                                        "example": 90
                                    }
                                },
                                "type": "object"
                            },
                            "tasks": {
                                "$ref": "#/components/schemas/Pagination"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "Сообщение о результате операции",
                        "type": "string",
                        "example": "Список задач получен"
                    }
                },
                "type": "object"
            },
            "DeleteSuccessResponse": {
                "description": "Ответ об успешном удалении задач",
                "properties": {
                    "success": {
                        "description": "Статус успешности запроса",
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "description": "Сообщение о результате операции",
                        "type": "string",
                        "example": "Задачи успешно удалены"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Accounts",
            "description": "Операции для управления аккаунтами ВКонтакте"
        },
        {
            "name": "Tasks",
            "description": "Операции для управления задачами"
        },
        {
            "name": "Cyclic Tasks",
            "description": "Операции для управления циклическими задачами"
        },
        {
            "name": "Filters",
            "description": "Filters"
        },
        {
            "name": "Settings",
            "description": "Settings"
        },
        {
            "name": "Statistics",
            "description": "Statistics"
        }
    ]
}